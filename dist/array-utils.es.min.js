const copy=(r,e,p,n)=>{for(;p<n;++p)r[p]=e[p];return r},resizeBuffer=(r,e)=>{var p=new r.constructor(new ArrayBuffer(e*r.BYTES_PER_ELEMENT));return copy(p,r,0,Math.min(r.length,e)),p},swap=(r,e,p)=>{var n=r[e];return r[e]=r[p],r[p]=n,r},swapNPop=(r,e)=>{var p,n=r.pop();return e>=r.length?n:(p=r[e],r[e]=n,p)};export{copy,resizeBuffer,swap,swapNPop};